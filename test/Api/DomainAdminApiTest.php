<?php
/**
 * DomainAdminApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  MailCow
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * mailcow API
 *
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace MailCow\Test\Api;

use \MailCow\Configuration;
use \MailCow\ApiException;
use \MailCow\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DomainAdminApiTest Class Doc Comment
 *
 * @category Class
 * @package  MailCow
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DomainAdminApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDomainAdminUser
     *
     * Create Domain Admin user.
     *
     */
    public function testCreateDomainAdminUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDomainAdmin
     *
     * Delete Domain Admin.
     *
     */
    public function testDeleteDomainAdmin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editDomainAdminACL
     *
     * Edit Domain Admin ACL.
     *
     */
    public function testEditDomainAdminACL()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editDomainAdminUser
     *
     * Edit Domain Admin user.
     *
     */
    public function testEditDomainAdminUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDomainAdmins
     *
     * Get Domain Admins.
     *
     */
    public function testGetDomainAdmins()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
