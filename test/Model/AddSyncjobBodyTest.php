<?php
/**
 * AddSyncjobBodyTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  MailCow
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * mailcow API
 *
 * mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace MailCow;

/**
 * AddSyncjobBodyTest Class Doc Comment
 *
 * @category    Class
 * @description AddSyncjobBody
 * @package     MailCow
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AddSyncjobBodyTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "AddSyncjobBody"
     */
    public function testAddSyncjobBody()
    {
    }

    /**
     * Test attribute "parameters"
     */
    public function testPropertyParameters()
    {
    }

    /**
     * Test attribute "host1"
     */
    public function testPropertyHost1()
    {
    }

    /**
     * Test attribute "port1"
     */
    public function testPropertyPort1()
    {
    }

    /**
     * Test attribute "password"
     */
    public function testPropertyPassword()
    {
    }

    /**
     * Test attribute "enc1"
     */
    public function testPropertyEnc1()
    {
    }

    /**
     * Test attribute "mins_internal"
     */
    public function testPropertyMinsInternal()
    {
    }

    /**
     * Test attribute "subfolder2"
     */
    public function testPropertySubfolder2()
    {
    }

    /**
     * Test attribute "maxage"
     */
    public function testPropertyMaxage()
    {
    }

    /**
     * Test attribute "maxbytespersecond"
     */
    public function testPropertyMaxbytespersecond()
    {
    }

    /**
     * Test attribute "timeout1"
     */
    public function testPropertyTimeout1()
    {
    }

    /**
     * Test attribute "timeout2"
     */
    public function testPropertyTimeout2()
    {
    }

    /**
     * Test attribute "exclude"
     */
    public function testPropertyExclude()
    {
    }

    /**
     * Test attribute "custom_params"
     */
    public function testPropertyCustomParams()
    {
    }

    /**
     * Test attribute "delete2duplicates"
     */
    public function testPropertyDelete2duplicates()
    {
    }

    /**
     * Test attribute "delete1"
     */
    public function testPropertyDelete1()
    {
    }

    /**
     * Test attribute "delete2"
     */
    public function testPropertyDelete2()
    {
    }

    /**
     * Test attribute "automap"
     */
    public function testPropertyAutomap()
    {
    }

    /**
     * Test attribute "skipcrossduplicates"
     */
    public function testPropertySkipcrossduplicates()
    {
    }

    /**
     * Test attribute "subscribeall"
     */
    public function testPropertySubscribeall()
    {
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
    }
}
